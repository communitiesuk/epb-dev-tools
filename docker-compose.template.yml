services:
  epb-proxy:
    build:
      context: ${PWD}/
      dockerfile: ${PWD}/nginxReverseProxy.Dockerfile
    links:
      - epb-auth-server
      - epb-register-api
      - epb-frontend
      - epb-data-frontend
    ports:
      - "80:80"
    volumes:
      - ${PWD}/http_files:/var/www/http_files

  epb-frontend:
    build:
      context: ${EPB_FRONTEND_PATH}
      dockerfile: ${PWD}/sinatra.Dockerfile
    environment:
      EPB_API_URL: http://epb-register-api
      EPB_DATA_WAREHOUSE_API_URL: http://epb-data-warehouse-api
      EPB_AUTH_CLIENT_ID: 6f61579e-e829-47d7-aef5-7d36ad068bee
      EPB_AUTH_CLIENT_SECRET: test-client-secret
      EPB_AUTH_SERVER: http://epb-auth-server/auth
      EPB_UNLEASH_URI: http://epb-feature-flag/api
      JWT_ISSUER: epb-auth-server
      JWT_SECRET: test-jwt-secret
      STAGE: development
    links:
      - epb-auth-server
      - epb-feature-flag
      - epb-register-api
    volumes:
      - ${EPB_FRONTEND_PATH}:/app

  epb-data-frontend:
    build:
      context: ${EPB_DATA_FRONTEND_PATH}
      dockerfile: ${PWD}/sinatra.Dockerfile
    env_file:
      - .env.keys
    environment:
      EPB_API_URL: http://epb-register-api
      EPB_DATA_WAREHOUSE_API_URL: http://epb-data-warehouse-api
      EPB_AUTH_CLIENT_ID: 6f61579e-e829-47d7-aef5-7d36ad068bee
      EPB_AUTH_CLIENT_SECRET: test-client-secret
      EPB_AUTH_SERVER: http://epb-auth-server/auth
      EPB_UNLEASH_URI: http://epb-feature-flag/api
      STAGE: development
      ONELOGIN_CLIENT_ID: datafrontendclientid
      ONELOGIN_HOST_URL: http://one-login-simulator:3000
      EPB_DATA_USER_CREDENTIAL_TABLE_NAME: user_credentials
      DYNAMODB_ENDPOINT: http://dynamodb-local:8000
      AWS_ACCESS_KEY_ID: dummy
      AWS_SECRET_ACCESS_KEY: dummy
    links:
      - epb-auth-server
      - epb-feature-flag
      - epb-register-api
      - epb-data-warehouse-api
      - one-login-simulator
    volumes:
      - ${EPB_DATA_FRONTEND_PATH}:/app

  epb-auth-server:
    build:
      context: ${EPB_AUTH_SERVER_PATH}
      dockerfile: ${PWD}/sinatra.Dockerfile
    environment:
      DATABASE_URL: postgresql://epb_auth:superSecret30CharacterPassword@epb-auth-server-db/epb_auth
      JWT_ISSUER: epb-auth-server
      JWT_SECRET: test-jwt-secret
      URL_PREFIX: /auth
      RACK_ENV: development
    links:
      - epb-auth-server-db
    volumes:
      - ${EPB_AUTH_SERVER_PATH}:/app

  epb-auth-server-db:
    build:
      context: ${PWD}/
      dockerfile: ${PWD}/epbDatabase.Dockerfile
    environment:
      POSTGRES_PASSWORD: superSecret30CharacterPassword
      POSTGRES_USER: epb_auth
    volumes:
      - auth-server:/var/lib/postgresql@${POSTGRES_VERSION}/data

  epb-data-warehouse-api:
    build:
      context: ${EPB_DATA_WAREHOUSE_PATH}
      dockerfile: ${PWD}/sinatra.Dockerfile
    environment:
      DATABASE_URL: postgresql://epb:SecretWarehousePassword@epb-data-warehouse-db/epb?pool=50
      JWT_ISSUER: epb-auth-server
      JWT_SECRET: test-jwt-secret
      STAGE: development
    links:
      - epb-data-warehouse-db
    volumes:
      - ${EPB_DATA_WAREHOUSE_PATH}:/app

  epb-register-api:
    build:
      context: ${EPB_REGISTER_API_PATH}
      dockerfile: ${PWD}/sinatra.Dockerfile
    environment:
      DATABASE_URL: postgresql://epb_register:superSecret30CharacterPassword@epb-register-api-db/epb_register
      EPB_UNLEASH_URI: http://epb-feature-flag/
      JWT_ISSUER: epb-auth-server
      JWT_SECRET: test-jwt-secret
      STAGE: development
    links:
      - epb-feature-flag
      - epb-register-api-db
    volumes:
      - ${EPB_REGISTER_API_PATH}:/app

  epb-register-api-db:
    build:
      context: ${PWD}/
      dockerfile: ${PWD}/epbDatabase.Dockerfile
    environment:
      POSTGRES_PASSWORD: superSecret30CharacterPassword
      POSTGRES_USER: epb_register
    volumes:
      - register-api:/var/lib/postgresql@${POSTGRES_VERSION}/data

  epb-feature-flag:
    environment:
      DATABASE_URL: postgresql://unleashed:superSecret30CharacterPassword@epb-feature-flag-db/unleashed
      HTTP_HOST: 0.0.0.0
      HTTP_PORT: 80
    image: unleashorg/unleash-server:3.1
    links:
      - epb-feature-flag-db
    command: >
      sh -c "
        while ! nc -z epb-feature-flag-db 5432; do
          echo 'Postgres is unavailable.'
          sleep 1
        done
        sleep 10
        npm run start"

  epb-feature-flag-db:
    build:
      context: ${PWD}/
      dockerfile: ${PWD}/epbDatabase.Dockerfile
    environment:
      POSTGRES_PASSWORD: superSecret30CharacterPassword
      POSTGRES_USER: unleashed
    volumes:
      - feature-flag:/var/lib/postgresql@${POSTGRES_VERSION}/data

  one-login-simulator:
    image: ghcr.io/govuk-one-login/simulator:25.05.13
    env_file:
      - .env.keys
    ports:
      - "3000:3000"
    environment:
      CLIENT_ID: datafrontendclientid
      SCOPES: openid,email
      REDIRECT_URLS: http://epb-data-frontend/login/callback
      SIMULATOR_URL: http://one-login-simulator:3000

  dynamodb-local:
    command: "-jar DynamoDBLocal.jar -sharedDb -dbPath /home/dynamodblocal/data"
    user: root
    image: "amazon/dynamodb-local:latest"
    ports:
      - "8000:8000"
    volumes:
      - dynamodb:/home/dynamodblocal/data
    working_dir: /home/dynamodblocal


volumes:
  feature-flag:
  register-api:
  auth-server:
  dynamodb:
